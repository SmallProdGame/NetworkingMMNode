import Player from './player';
import { MatchTeam, MatchPlayer } from './matchmakingmanager';
import GameServer from './gameserver';
export declare class Match {
    hasStart: boolean;
    isFull: boolean;
    nbPlayersPerTeam: number;
    allowedGap: number;
    matchId: number;
    maxUser: number;
    minUser: number;
    map: string;
    type: string;
    password: string;
    teams: MatchTeam[];
    gameServer: GameServer | null;
    async: boolean;
    constructor(maxUser: number, minUser: number, map: string, type: string, password: string, nbPlayersPerTeam: number, allowedGap: number);
    onTeamJoin: (team: MatchTeam, affectedTeam?: MatchTeam | null) => void;
    onPlayerJoinLobby: (client: Player) => boolean;
    onPlayerReadyLobby: (client: Player) => boolean;
    onPlayerLeave: (client: Player, fromGameServer?: boolean) => void;
    checkPassword: (password: string) => boolean;
    players: () => MatchPlayer[];
    startMatch: () => void;
    endMatch: () => void;
    protected getPlayerIndex: (client: Player) => string;
    protected createMatch: () => void;
    protected getBestGameServer: () => GameServer | null;
    protected checkIfWeCanStart: () => void;
    protected checkIfFull: () => void;
    protected broadcast: (type: string, data: any) => void;
}
